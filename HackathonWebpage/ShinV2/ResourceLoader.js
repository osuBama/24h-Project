var gdjs;(function(u){const i=new u.Logger("ResourceLoader"),R=(a,e,s)=>{if(a.startsWith("data:")||a.startsWith("blob:"))return a;const n=a.indexOf("?")===-1?"?":"&";return a+n+e+"="+s},_=a=>a.startsWith("https://project-resources.gdevelop.io/")||a.startsWith("https://project-resources-dev.gdevelop.io/"),d=20,f=5,g=3;class v{constructor(e){this.isFinished=!1;this.sceneName=e,this.onProgressCallbacks=new Array,this.onFinishCallbacks=new Array}registerCallback(e,s){if(this.isFinished){e();return}this.onFinishCallbacks.push(e),s&&this.onProgressCallbacks.push(s)}onProgress(e,s){for(const n of this.onProgressCallbacks)n(e,s)}onFinish(){this.isFinished=!0;for(const e of this.onFinishCallbacks)e()}}class w{constructor(e,s,n,r){this._sceneToLoadQueue=new Array;this.currentLoadingSceneName="";this.currentSceneLoadingProgress=0;this._isLoadingInForeground=!0;this._runtimeGame=e,this._resources=new Map,this._globalResources=n,this._sceneResources=new Map,this._sceneNamesToLoad=new Set,this._sceneNamesToMakeReady=new Set,this.setResources(s,n,r),this._imageManager=new u.ImageManager(this),this._soundManager=new u.SoundManager(this),this._fontManager=new u.FontManager(this),this._jsonManager=new u.JsonManager(this),this._bitmapFontManager=new u.BitmapFontManager(this,this._imageManager),this._model3DManager=new u.Model3DManager(this);const t=[this._imageManager,this._soundManager,this._fontManager,this._jsonManager,this._bitmapFontManager,this._model3DManager];this._resourceManagersMap=new Map;for(const o of t)for(const c of o.getResourceKinds())this._resourceManagersMap.set(c,o)}setResources(e,s,n){this._globalResources=s,this._sceneResources.clear(),this._sceneNamesToLoad.clear(),this._sceneNamesToMakeReady.clear();for(const r of n)this._sceneResources.set(r.name,r.usedResources.map(t=>t.name)),this._sceneNamesToLoad.add(r.name),this._sceneNamesToMakeReady.add(r.name);this._sceneToLoadQueue.length=0;for(let r=n.length-1;r>=0;r--){const t=n[r];this._sceneToLoadQueue.push(new v(t.name))}this._resources.clear();for(const r of e)this._resources.set(r.name,r)}async loadAllResources(e){let s=0;await h([...this._resources.values()],d,g,async n=>{await this._loadResource(n),await this._processResource(n),s++,e(s,this._resources.size)}),this._sceneNamesToLoad.clear(),this._sceneNamesToMakeReady.clear()}async loadGlobalAndFirstSceneResources(e,s){const n=this._sceneResources.get(e);if(!n){i.warn(`Can't load resource for unknown scene: "`+e+'".');return}let r=0;const t=[...this._globalResources,...n.values()];await h(t,d,g,async o=>{const c=this._resources.get(o);if(!c){i.warn('Unable to find resource "'+o+'".');return}await this._loadResource(c),await this._processResource(c),r++,s(r,t.length)}),this._setSceneAssetsLoaded(e),this._setSceneAssetsReady(e)}async loadAllSceneInBackground(){for(;this._sceneToLoadQueue.length>0;){const e=this._sceneToLoadQueue[this._sceneToLoadQueue.length-1];e!==void 0&&(this.currentLoadingSceneName=e.sceneName,this.areSceneAssetsLoaded(e.sceneName)?this._sceneToLoadQueue.pop():(await this._doLoadSceneResources(e.sceneName,async(s,n)=>e.onProgress(s,n)),this._sceneToLoadQueue.splice(this._sceneToLoadQueue.findIndex(s=>s===e),1),e.onFinish()))}this.currentLoadingSceneName=""}async _doLoadSceneResources(e,s){const n=this._sceneResources.get(e);if(!n){i.warn(`Can't load resource for unknown scene: "`+e+'".');return}let r=0;await h([...n.values()],this._isLoadingInForeground?d:f,g,async t=>{const o=this._resources.get(t);if(!o){i.warn('Unable to find resource "'+t+'".');return}await this._loadResource(o),r++,this.currentSceneLoadingProgress=r/this._resources.size,s&&await s(r,this._resources.size)}),this._setSceneAssetsLoaded(e)}async _loadResource(e){const s=this._resourceManagersMap.get(e.kind);if(!s){i.warn('Unknown resource kind: "'+e.kind+'" for: "'+e.name+'".');return}await s.loadResource(e.name)}async loadAndProcessSceneResources(e,s){if(this.areSceneAssetsReady(e))return;await this.loadSceneResources(e,s);const n=this._sceneResources.get(e);if(!n){i.warn(`Can't load resource for unknown scene: "`+e+'".');return}let r=0;for(const t of n){const o=this._resources.get(t);if(!o){i.warn('Unable to find resource "'+t+'".');continue}await this._processResource(o),r++,s&&await s(r,n.length)}this._setSceneAssetsReady(e)}async loadSceneResources(e,s){this._isLoadingInForeground=!0;const n=this._prioritizeScene(e);return new Promise((r,t)=>{if(!n){this._isLoadingInForeground=!1,r();return}n.registerCallback(()=>{this._isLoadingInForeground=!1,r()},s)})}_prioritizeScene(e){const s=this._sceneToLoadQueue.findIndex(r=>r.sceneName===e);if(s<0)return null;const n=this._sceneToLoadQueue[s];return this._sceneToLoadQueue.splice(s,1),this._sceneToLoadQueue.push(n),n}async _processResource(e){const s=this._resourceManagersMap.get(e.kind);if(!s){i.warn('Unknown resource kind: "'+e.kind+'" for: "'+e.name+'".');return}await s.processResource(e.name)}getSceneLoadingProgress(e){return e===this.currentLoadingSceneName?this.currentSceneLoadingProgress:this.areSceneAssetsLoaded(e)?1:0}areSceneAssetsLoaded(e){return!this._sceneNamesToLoad.has(e)}areSceneAssetsReady(e){return!this._sceneNamesToMakeReady.has(e)}_setSceneAssetsLoaded(e){this._sceneNamesToLoad.delete(e)}_setSceneAssetsReady(e){this._sceneNamesToMakeReady.delete(e)}getResource(e){return this._resources.get(e)||null}getFullUrl(e){const{gdevelopResourceToken:s}=this._runtimeGame._options;return!s||!_(e)?e:R(e,"gd_resource_token",encodeURIComponent(s))}checkIfCredentialsRequired(e){return this._runtimeGame._options.gdevelopResourceToken?!1:!!_(e)}getSoundManager(){return this._soundManager}getImageManager(){return this._imageManager}getFontManager(){return this._fontManager}getBitmapFontManager(){return this._bitmapFontManager}getJsonManager(){return this._jsonManager}getModel3DManager(){return this._model3DManager}}u.ResourceLoader=w;const m=(a,e,s)=>{const n=[],r=[];let t=0,o=0;return new Promise((c,y)=>{const p=()=>{if(a.length===0){c({results:n,errors:r});return}for(;t<e&&o<a.length;){const M=a[o++];t++,s(M).then(l=>n.push(l)).catch(l=>r.push({item:M,error:l})).finally(()=>{t--,o===a.length&&t===0?c({results:n,errors:r}):p()})}};p()})},h=async(a,e,s,n)=>{const r=await m(a,e,n);r.errors.length!==0&&i.warn("Some assets couldn't be downloaded. Trying again now.");for(let t=1;t<s&&r.errors.length!==0;t++){const o=await m(a,e,n);r.results.push.apply(r.results,o.results),r.errors=o.errors}return r}})(gdjs||(gdjs={}));
//# sourceMappingURL=ResourceLoader.js.map
